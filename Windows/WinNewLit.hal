external procedure DrawUserButtons(real,real,real,real,integer);
remote procedure DOLGetSalesmen(string, var array string, var integer);
remote procedure LoadStdProblemsToArray(var array string,var array string,var integer);
remote procedure LoadLocationsToArray(record LocalMachineBlock,var array string,var array string,var integer);
external inner function string 60 UserDefined(string,string);
external procedure DrawClockInUserButtons(real,real,real,real,integer);
external procedure DrawClockOutUserButtons(real,real,real,real,integer);

SetLangMode(LangLithuanian,"LIT",0);

window DiscEntTouchScreenDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,v,v2,v3,vs,l;

  WindowBegin("Nuolaida",DiscEntTouchScreenDClass,CGother,RcType);
    Modality(kModalityGlobal);
    UseView(RcVc);
    ActiveFieldOnNew("frc");
    SetWRect(80,200,400,300);
    Sizeable(-1,-1,0,0);
    h = 120; h2 = 170; v=40;
    EditFieldTL(h,v=6, 100,"Nuolaida %",M4Int,Normal,0,frc,false,0);

    v = 40; h2 = 55; v3 = 48; vs = 52; hm = 40; l = 57;
    h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPad1","1_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPad2","2_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPad3","3_",2);
    v = v+vs;
    h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPad4","4_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPad5","5_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPad6","6_",2);
    v = v+vs;
    h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPad7","7_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPad8","8_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPad9","9_",2);
    v = v+vs;
    h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPadDelete","Del",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DiscEntToolKeyPad0","0_",2);
    v = v+vs+10;
    h = hm; ColourPushButton(h,v,h+2*h2,v+v3,"DiscEntToolKeyCancel","Nutraukti",2);
    h = h+(2*h2)+2; ColourPushButton(h,v,h+2*h2,v+v3,"DiscEntToolKeyOK","Prid˜ti",2);
  EndWindow;

  return;
end;

window PriceChTouchScreenDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,v,v2,v3,vs,l;

  WindowBegin("Pakeisti prek˜s kainˆ",PriceChTouchScreenDClass,CGother,RcType);
    Modality(kModalityGlobal);
    UseView(RcVc);
    ActiveFieldOnNew("vals0");
    SetWRect(80,200,400,340);
    Sizeable(-1,-1,0,0);
    h = 120; h2 = 170; v=40; vs=20;
    EditFieldTL(h,v=6, 100,"Prek˜",M4Str,ViewOnly,100,f1,false,0);
    EditFieldTL(h,v+=vs,-20,"Apraäymas",M4Str,ViewOnly,200,f2,false,0);
    EditFieldTL(h,v+=vs,100,"Kaina su nuolaida",M423Val,Normal,0,vals0,true,0);

    v = 80; h2 = 55; v3 = 48; vs = 52; hm = 40; l = 57;
    h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad1","1_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad2","2_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad3","3_",2);
    v = v+vs;
    h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad4","4_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad5","5_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad6","6_",2);
    v = v+vs;
    h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad7","7_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad8","8_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad9","9_",2);
    v = v+vs;
    h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadDelete","Del",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad0","0_",2);
    h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadPoint",".",2);
    v = v+vs+10;
    h = hm; ColourPushButton(h,v,h+2*h2,v+v3,"PriceChToolKeyCancel","Nutraukti",2);
    h = h+(2*h2)+2; ColourPushButton(h,v,h+2*h2,v+v3,"PriceChToolKeyOK","Prid˜ti",2);
  EndWindow;

  return;
end;

window DOLPOSCrossSalesWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,v,v2,v3,vs,l;

  WindowBegin("Parduodama prek˜",DOLPOSCrossSalesWClass,CGother,-);
  Modality(kModalityGlobal);
  UseView(INVc);
  SetWRect(20,80,500,400);
  Sizeable(-1,-1,0,0);
  h = 120; h2 = 170; v = 20;
  Pict_Field(h,v,h+150,160,"");
  EditFieldTL(h,v+=170, 200,"Prek˜",M4Str,ViewOnly,100,Name,false,0);
  EditFieldTL(h,v+=22, 80,"Kaina",M4Val,ViewOnly,0,UPrice1,true,0);
  v = v - 30; h = 80; v3 = 50; h2 = 85;
  ColourPushButton(h=h-20,v+=80,h+2*h2,v+v3,"DOLPOSCrossSalesCancel","Atäaukti",1);
  h = h+(2*h2)+20; ColourPushButton(h,v,h+2*h2,v+v3,"DOLPOSCrossSalesNext","Prid˜ti",2);
  EndWindow;

  return;
end;

window NPTSVarEnqWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,v,v2,v3,vs,l;

  WindowBegin("¯vairovi÷ uìklausa",NPTSVarEnqWClass,CGother,-);
  UseView(RcVc);
  SetWRect(20,80,520,420);
  Sizeable(-1,-1,0,0);

  EditFieldTL(h=270,v=140, 150,"Prek˜",M4UStr,Normal,60,f4,false,0);
  h = 120; v = 30; h2 = 55; v3 = 48; vs = 52; hm = 40; l = 57;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad1","1_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad2","2_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad3","3_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad4","4_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad5","5_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad6","6_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad7","7_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad8","8_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad9","9_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadDelete","Del",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad0","0_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadPoint",".",2);
  v = v+vs+10;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadC","C",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadV","V",2);
//  ColourPushButton(h=h-2*l,v,h=h+2*h2+30,v+v3,"PriceChToolKeyOK","Prid˜ti",2);

//  v = v - 30; v3 = 50; h2 = 85;
  ColourPushButton(h=h+130,v,h+2*h2+20,v+v3,"DOLNPTSVarEnqRnRun","Vykdyti",2);
  EndWindow;

  return;
end;

window DOLPOSGCPriceUpWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs;

  WindowBegin("Pasirinkimas",DOLPOSGCPriceUpWClass,CGother,-);
  SetWRect(20,80,450,300);
  Modality(kModalityGlobal);
  UseView(RcVc);
  v = 20;  vs = 45;
  StaticText(20,v+=vs,"Padidinti kvito viso sumˆ, kad jinai sutaptu su Dovan÷ kupono suma?",false);
  v = v + vs;
  ColourPushButton(100,v,200,v+40,"DOLDialogDoNothing","Ne",1);
  ColourPushButton(-200,v,-100,v+40,"DOLDialogPOSAutoAdjustPrice","Taip",2);
  EndWindow;

  return;
end;

window DOLOrdNumpadWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,v,v2,v3,vs,l;

  WindowBegin("Nurodykite datˆ - Plan. siuntimas",DOLOrdNumpadWClass,CGother,-);
  SetWRect(20,80,400,350);
  UseView(RcVc);
  v = 20; h2 = 55; v3 = 48; vs = 52; hm = 40; l = 57;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadNum1","1_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadNum2","2_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadNum3","3_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadNum4","4_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadNum5","5_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadNum6","6_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadNum7","7_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadNum8","8_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadNum9","9_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadDel","Del",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadNum0","0_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLOrdNumpadOK","OK",2);
  h = h+100; ColourPushButton(h,v,h+h2*2,v+v3,"DOLOrdNumpadOKOrder","Ok ir iäsaugoti",2);
  EndWindow;

  return;
end;

window EBS_ChooseSalesManVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,v,v2,v3,vs,l;
  integer wn;
  longint bm,lt,rt,tp;
  record RcVc RepSpec;

  WindowBegin("Pasirinkti Pardav˜jˆ",EBS_ChooseSalesManVClass,CGOther,RcType);
    Modality(kModalityGlobal);
    wn = CurWindow;
    GetScreenSize(wn,tp,lt,bm,rt);
    switch (GuiType) begin
      case kGuiCocoa:
        bm = bm - 80;
      case kGuiWindowsDesktop:
        tp = tp + 30;
        bm = bm - 40;
        rt = rt - 55;
        lt = lt - 45;
      case kGuiGDI:
        tp = tp + 30;
        bm = bm - 40;
        rt = rt - 55;
        lt = lt - 45;
      case kGuiWPF:
        tp = tp + 30;
        bm = bm - 40;
        rt = rt - 55;
        lt = lt - 45;
    end;

  SetWRect(lt,tp,rt,bm); // SetWRect(64,80,409,210);
  FullscreenWindow;
  Sizeable(-1,-1,0,0);
  UseView(RcVc);

  hm = 280; v = 60;
  vs = 52; h2 = 55; v3 = 48; l = 57;
  h = hm;
  EditFieldTLX(h+l+30,20,120,"Grˆìa",M4Val,ViewOnly,100,25,patM4black,vals0,true,0);
  EditFieldTL(h+l+30,v,120,"Pardav˜jˆs",M4UStr,Normal,10,f1,false,0);
  EditFieldTL(h+l+30,v+=20,120,"Slaptaìodis",M4Star,Normal,20,f2,false,0);
  v=v+29;
  h = hm; ColourPushButton(h,v,h+h2*3,v+v3,"SalesAssistantVClassUserListBtn","Pard. sˆraäas",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad1","1_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad2","2_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad3","3_",2);
  h = h + h2 + 10; ColourPushButton(h,v,h+h2,v+v3*3+8,"EBS_ChooseSalesManVClassOKBtn","OK",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad4","4_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad5","5_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad6","6_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad7","7_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad8","8_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad9","9_",2);
  v = v+vs;
  h = hm-2+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad0","0_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyDel","Del",2);

  // ColourPushButton(300,40,400,88,"TEST","TEST",2);
  DrawUserButtons(50,40,vs,v3,10);
  EndWindow;

  return;
end;

window NPTSInvValWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,l,v,v3,vs;

  WindowBegin("Preki÷ liku‹iai",NPTSInvValWClass,CGother,-);
  UseView(RcVc);
  SetWRect(20,80,520,420);
  Sizeable(-1,-1,0,0);

  EditFieldTL(h=270,v=140, 150,"Prek˜",M4UStr,Normal,60,f4,false,0);
  h = 120; v = 30; h2 = 55; v3 = 48; vs = 52; hm = 40; l = 57;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad1","1_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad2","2_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad3","3_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad4","4_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad5","5_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad6","6_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad7","7_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad8","8_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad9","9_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadDelete","Del",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPad0","0_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadPoint",".",2);
  v = v+vs+10;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadC","C",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadV","V",2);
//  ColourPushButton(h=h-2*l,v,h=h+2*h2+30,v+v3,"PriceChToolKeyOK","Prid˜ti",2);

//  v = v - 30; v3 = 50; h2 = 85;
  ColourPushButton(h=h+130,v,h+2*h2+20,v+v3,"DOLNPTSInvValRnRun","Vykdyti",2);
  EndWindow;

  return;
end;

window DOLNPTSIVCashListNumWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,l,v,v3,vs;

  WindowBegin("Nurodyti skai‹i÷",DOLNPTSIVCashListNumWClass,CGother,-);
  SetWRect(20,80,400,350);
  UseView(RcVc);
  v = 20; h2 = 55; v3 = 48; vs = 52; hm = 40; l = 57;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumNum1","1_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumNum2","2_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumNum3","3_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumNum4","4_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumNum5","5_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumNum6","6_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumNum7","7_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumNum8","8_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumNum9","9_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumDel","Del",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumNum0","0_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"DOLNPTSIVCashListNumOK","OK",2);
  EndWindow;

  return;
end;

window UpdateItemNameVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  WindowBegin("Item name update",UpdateItemNameVClass,CGMnt,RcType);
    SetWRect(100,120,400,278);
    StaticText(20,40, "Maintenance updates all item names.",0);
    StaticText(20,60, "After maintenance check log file for errors.",0);
  EndWindow;

  return;
end;

window AddCUObjVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  WindowBegin("Add objects to contacts",AddCUObjVClass,CGMnt,RcType);
    SetWRect(100,120,400,278);
    StaticText(20,40, "Adds objects to all contact cards",0);
    StaticText(20,60, "After maintenance check log file for errors",0);
  EndWindow;

  return;
end;

window EBS_UserSClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  WindowBegin("¯statyti asmen°",EBS_UserSClass,CGother,HBlRecType);
    Modality(kModalityAboveParent);
    SetWRect(240,80,500,299);
    HalPushButton(10,10,100,30,"EBS_CloseWindowBtn","Nutraukti");
    Sizeable(-1,-1,0,0);
    StringList(9,39,-40,-10);
  EndWindow;

  return;
end;

window RemoveORReservVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;

  WindowBegin("Atäaukti negaliojan‹ias rezervacijas",RemoveORReservVClass,CGMnt,RcType);
    SetWRect(100,120,400,278);
    EditField(h=100,v=10,100,"Data",Normal,d1,false,PasteCurDate);
  EndWindow;

  return;
end;

window UserPOSGroupTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;

  WindowBegin("User POS groups",UserPOSGroupTClass,CGHbl,HBlRecType);
    SetWRect(20,80,532,357);
    Sizeable(-1,-1,0,0);
    SetBlid(UserPOSGroupBlock);
    MatrixBegin(h=8,v=20,-31,-20,-,99);
    MatCol(1,24,"Asmuo",0,UserCode,false,UserSClass);
    MatCol(1,84,"POS grup˜",0,POSGroups,false,EGSClass);
    EndMatrix;
  EndWindow;

  return;
end;

window EBS_GenBarCodesVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin

  WindowBegin("Kurti bar kodus",EBS_GenBarCodesVClass,CGMnt,RcType);
    SetWRect(100,120,400,278);
  EndWindow;

  return;
end;

window DOLTSPIVGPWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  real h2,v3;
  record LocalMachineBlock lmb;
  integer i,usrcnt;
  array string 20 a_usrcodes;

  BlockLoad(lmb);
  DOLGetSalesmen(lmb.POSGroup,a_usrcodes,usrcnt);

  WindowBegin("BP, POS faktðros",DOLTSPIVGPWClass,CGOther,-);
  if (usrcnt <= 3) then begin
    SetWRect(20,80,450,330);
  end else begin
    SetWRect(20,80,450,330+((usrcnt/3)*(40+20)));
  end;
  UseView(RcVc);
  vs = 20;
  PeriodField(h=155,v=6,"Periodas");
//  EditFieldTL(h,v+=vs, 150,"Faktðros nr.",   M4Str,Normal,30,f1,false,0);
//  EditFieldTL(h,v+=vs ,150,"Pirk˜jas",M4UStr,Normal,50,f2,false,CUSClass);
  EditFieldTL(h,v+=vs ,100,"Pardav˜jas",M4UStr,Normal,10,AccStr,false,UserSClass);
//  EditFieldTL(h,v+=vs ,150,"Prek˜",M4UStr,Normal,20,FirstAcc,false,INSClass);
//  EditFieldTL(h,v+=vs ,80,"Prek˜s grup˜",M4UStr,Normal,5,LastAcc,false,ITSClass);
//  EditFieldTL(h,v+=vs ,150,"Prek˜s klas˜",M4UStr,Normal,200,f6,false,DISClass);
//  EditFieldTL(h,v+=vs ,150,"Objektas",M4UStr,Normal,60,ObjStr,false,ObjSClass);
//  EditFieldTL(h,v+=vs ,150,"Objektas iä eilut˜s (Detaliai)",M4UStr,Normal,60,f3,false,ObjSClass);
//  EditFieldTL(h,v+=vs ,50,"Mok˜jimo tipas",M4UStr,Normal,5,TransStr,false,PDSClass);
//  EditFieldTL(h,v+=vs,50,"Lokalus kompiuteris",M4UStr,Normal,5,f7,false,0);
//  EditFieldTL(h,v+=vs,80,"Patalpa",M4UStr,Normal,5,f4,false,LocationSClass);
//  EditFieldTL(h,v+=vs,50,"Stal‹ius",M4UStr,Normal,5,f5,false,DrawerSClass);
//  ButtonFrame(h,vm=(v+=41),140,3,"Funkcija");
//  RadioButton(h,v,0,0,"Perìiðra",ArtMode);
//  RadioButton(h,v+=16,2,0,"Perìiðra per valandˆ",ArtMode); // EVS: DOL-5
//  RadioButton(h,v+=16,1,0,"Detaliai",ArtMode);
//  CheckBox(h+15,v+=16,0,"Tik su Nuol.",flags[3]); // EVS: DOL-5
//  EndFrame;
  h = 20; v = v + 30; h2 = 100; v3 = 40;
  vs = 60;
  ColourPushButtonTag(h,v,h+h2,v+v3,"DOLTSPIVGPWClassSetPer","áiandien",4,0);
  ColourPushButtonTag(h=h+h2+20,v,h+h2,v+v3,"DOLTSPIVGPWClassSetPer","áiˆ savait«",4,1);
  ColourPushButtonTag(h=h+h2+20,v,h+h2,v+v3,"DOLTSPIVGPWClassSetPer","á° m˜nes°",4,2);
  v = v + vs;
  for (i = 0; i < usrcnt; i = i + 1) begin
    if (i == 0) then begin
      ColourPushButtonTag(h=20,v,h+h2,v+v3,"DOLTSPIVGPWClassPasteUser",a_usrcodes[i],7,a_usrcodes[i]);
    end else begin
      if (i < 3) then begin
        ColourPushButtonTag(h=h+110,v,h+h2,v+v3,"DOLTSPIVGPWClassPasteUser",a_usrcodes[i],7,a_usrcodes[i]);
      end else begin
        if (mod(i,3)==0) then begin
          ColourPushButtonTag(h=20,v+=vs,h+h2,v+v3,"DOLTSPIVGPWClassPasteUser",a_usrcodes[i],7,a_usrcodes[i]);
        end else begin
          ColourPushButtonTag(h=h+110,v,h+h2,v+v3,"DOLTSPIVGPWClassPasteUser",a_usrcodes[i],7,a_usrcodes[i]);
        end;
      end;
    end;
  end;
  v = v + vs;
  v3 = 45; h2 = 100;
  ColourPushButtonTag(h=20,v,h+h2,v+v3,"DOLTSPIVGPWClassRunRep","Perìiðra",2,4);
  h=h+(h2+20);
  ColourPushButtonTag(h=h+(h2+20),v,h+h2,v+v3,"DOLTSPIVGPWClassRunRep","Tik Viso",2,3);
  EndWindow;
end;


window StockMovFrLClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Sand˜lio perk˜limai",StockMovFrLClass,CGmlist,-);
  SpawnClass(StockMovDClass);
  SetWRect(64,80,800,298);
  Sizeable(-1,-1,0,0);
  UseView(StockMovVc);
  FormName(PrintStockMovL);
  if (GuiType == kGuiCocoa) then begin
    // EVS: DOL-27
    ToolBar;
    HalPushButton(50,6,50+140,6+20,"DOLOpenAllFilterLClassBtn","VISI");
    HalPushButton(200,6,200+140,6+20,"DOLOpenToFilterLClassBtn","¯");
    EndToolBar;
    // :EVS
    RecordList(4,17,-21,-39);
  end else begin
    // EVS: DOL-27
//    ToolBar;
    HalPushButton(50,6,50+140,6+20,"DOLOpenAllFilterLClassBtn","VISI");
    HalPushButton(200,6,200+140,6+20,"DOLOpenToFilterLClassBtn","¯");
//    EndToolBar;
    // :EVS
    RecordList(4,50,-21,-39);
  end;
  RlColKey(4,4,  "Nr.",SerNr,false,FrSerNr);
  RlColKey(71,71,"Iäsi÷sta",SentOKFlag,false,FrSentOKFlag);
  RlColKey(111,111,"Gauta",OKFlag,false,FrOKFlag);
  RlColKey(151,151,"Siuntimo data",SentTransDate,false,FrSentTransDate);
  RlColKey(223,223,"Data",TransDate,false,FrTransDate);
  RlColKey(295,295,"Fr. patalpa",FrLocation,false,FrFrLocOK);
  RlColKey(370,370,"Per patalpˆ",ThrouLocation,false,FrToThrouLocOK);
  RlColKey(450,450,"¯ patalpˆ",ToLocation,false,FrToLocOK);
  RlColKey(530,530, "Komentaras",Comment,false,FrComment);
  SpecialMenu("Gauti",'G',0,"OKStockMovLsm");
  SearchField("Ieäkoti");
  EndWindow;
end;

window StockMovToLClass:1 // the real stockmovlclass
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("Sand˜lio perk˜limai",StockMovToLClass,CGmlist,-);
  SpawnClass(StockMovDClass);
  SetWRect(64,80,800,298);
  Sizeable(-1,-1,0,0);
  UseView(StockMovVc);
  FormName(PrintStockMovL);
  if (GuiType == kGuiCocoa) then begin
    // EVS: DOL-27
    ToolBar;
    HalPushButton(50,6,50+140,6+20,"DOLOpenFrFilterLClassBtn","Iá");
    HalPushButton(200,6,200+140,6+20,"DOLOpenToFilterLClassBtn","¯");
    EndToolBar;
    // :EVS
    RecordList(4,17,-21,-39);
  end else begin
    // EVS: DOL-27
    //ToolBar;
    HalPushButton(50,6,50+140,6+20,"DOLOpenFrFilterLClassBtn","Iá");
    HalPushButton(200,6,200+140,6+20,"DOLOpenToFilterLClassBtn","¯");
    //EndToolBar;
    // :EVS
    RecordList(4,50,-21,-39);
  end;
  RlColKey(4,4,  "Nr.",SerNr,false,SerNr);
  RlColKey(71,71,"Iäsi÷sta",SentOKFlag,false,SentOKFlag);
  RlColKey(111,111,"Gauta",OKFlag,false,OKFlag);
  RlColKey(151,151,"Siuntimo data",SentTransDate,false,SentTransDate);
  RlColKey(223,223,"Data",TransDate,false,TransDate);
  RlColKey(295,295,"Fr. patalpa",FrLocation,false,FrLocOK);
  RlColKey(370,370,"Per patalpˆ",ThrouLocation,false,ToThrouLocOK);
  RlColKey(450,450,"¯ patalpˆ",ToLocation,false,ToLocOK);
  RlColKey(530,530, "Komentaras",Comment,false,Comment);
  SpecialMenu("Gauti",'G',0,"OKStockMovLsm");
  SearchField("Ieäkoti");
  EndWindow;
end;

// EVS: DOL-79
window DOLSoldINBalRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("DOL - Parduot÷ preki÷ liku‹iai",DOLSoldINBalRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  vs = 20; h = 130; v = 6;
  PeriodField(h,v,"Periodas");
  EditFieldTL(h,v+=vs,70,"Grup˜",M4Code,Normal,5,f1,false,ITSClass);
  EditFieldTL(h,v+=vs, 70,"Patalpa 1",M4Code,Normal,10,f2,false,LocationSClass);
  EditFieldTL(h,v+=vs, 70,"Per patalpˆ",M4Code,Normal,10,f3,false,LocationSClass);
  EditFieldTL(h,v+=vs, 70,"Patalpa 2",M4Code,Normal,10,f4,false,LocationSClass);
  EditFieldTL(h,v+=vs, 50,"Minimalus lygis",M4UVal,Normal,10,vals0,true,0);
  EndWindow;
end;
// :EVS

window DOLPOSPasteStandProblemWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  integer probcnt,i;
  array string 20 a_probcodes;
  array string 100 a_probnames;

  LoadStdProblemsToArray(a_probcodes,a_probnames,probcnt);

  WindowBegin("Pasirinkimas",DOLPOSPasteStandProblemWClass,CGother,-);
  DynamicWindow;
  SetWRect(20,80,450,250 + (probcnt*50));
  UseView(RcVc);
  v = 20;  vs = 45;
  EditFieldTL(140,v,80,"Prieìastis",M4Code,Normal,20,f1,false,StandProblemsSClass);
  v = v + vs;
  for(i=0;i<probcnt;i=i+1)begin
    ColourPushButtonTag(100,v,-100,v+40,"DOLPOSPasteStandProblemWClassPasteProblem",a_probnames[i],7,a_probcodes[i]);
    v=v+50;
  end;

  ColourPushButton(100,v,200,v+40,"DOLDialogDoNothing","Atäaukti",1);
  ColourPushButton(-200,v,-100,v+40,"DOLDialogPOSPasteStandProblem","T«sti",2);
  EndWindow;

end;

window RetInvoiceRunRepWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,v,v3,l,vm,vs;
  integer loccnt,i;
  record LocalMachineBlock lmb;
  array string 20 a_loccodes;
  array string 100 a_locnames;

  BlockLoad(lmb);
  LoadLocationsToArray(lmb,a_loccodes,a_locnames,loccnt);

  i = (loccnt+mod(loccnt,2))/2 - 2;
  if i<0 then begin
    i = 0;
  end;

  WindowBegin("Pardavimo paieäka",RetInvoiceRunRepWClass,CGother,-);
  DynamicWindow;
  SetWRect(20,80,720,400 + (i * 50));
  UseView(RcVc);
  v = 20;  vs = 45;
  EditFieldTLX(h=200,v,150,"Data",M4Date,Normal,0,25,patM4black,d1,false,PasteCurDate);
  EditFieldTLX(h,v+=40,150,"Mok˜ta kort.",M4Val,Normal,0,25,patM4black,vals1,true,0);
  EditFieldTLX(h,v+=40,150,"Prek˜s kodas",M4Code,Normal,20,25,patM4black,f1,false,0);
  EditFieldTLX(h,vm=(v+=40),150,"Parduotuv˜",M4Code,Normal,20,25,patM4black,f2,false,0);

  v = 20; h2 = 55; v3 = 48; vs = 52; hm = 370; l = 57;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad1","1_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad2","2_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad3","3_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad4","4_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad5","5_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad6","6_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad7","7_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad8","8_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad9","9_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadDelete","Del",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad0","0_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"PriceChToolKeyPadPoint",".",2);

  ColourPushButton(h = hm-2,v+=80,h+=100,v+40,"DOLDialogDoNothing","Atäaukti",1);
  ColourPushButton(h+=10,v,h+100,v+40,"RetInvoiceRunRepWClassRunReport","T«sti",2);

  v = vm + 60;
  for(i=0;i<loccnt;i=i+2)begin
    ColourPushButtonTag(20,v,175,v+40,"RetInvoiceRunRepWClassPasteLocation",a_locnames[i],7,a_loccodes[i]);
    if ((i+1)<loccnt) then begin //for last row
      ColourPushButtonTag(195,v,350,v+40,"RetInvoiceRunRepWClassPasteLocation",a_locnames[i+1],7,a_loccodes[i+1]);
    end;
    v=v+50;
  end;

  EndWindow;

end;

//VITO: DOL-91
window DOL_SoldINStatRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs,vt;

  WindowBegin("DOL - Preki÷ pardavim÷ statistika",DOL_SoldINStatRClass,CGRcW,RcType);
  SetWRect(20,80,640,320);
  v = 6; h = 130; vs = 20; vm = 16;
  PeriodField(h,v,"Periodas");
  EditFieldTL(h,v+=vs,50,"Laikas",M4STime,Normal,0,sStartTime,false,PasteCurTime);
  StaticText(h+52,v+12,":",false);
  EditFieldTL(h+63,v,50,"",M4STime,Normal,0,sEndTime,false,PasteCurTime);
  EditFieldTL(h,v+=vs,150,"Prek˜",M4Str,Normal,50,f1,false,INSClass);
  EditFieldTL(h,v+=vs,100,"Pirk˜jas",M4Code,Normal,20,f10,false,CUSClass);
  EditFieldTL(h,v+=vs,100,"Pirkejo klase",M4UStr,Normal,60,f12,false,CClassSClass);
  EditFieldTL(h,v+=vs,100,"Prek˜s grup˜",M4Code,Normal,5,f2,false,ITSClass);
  EditFieldTL(h,v+=vs,150,"Prek˜s klasifikacija",M4UStr,Normal,200,f3,false,DISClass);
  EditFieldTL(h,v+=vs,100,"Patalpa",M4Code,Normal,10,f4,false,LocationSClass);
  EditFieldTL(h,v+=vs,100,"Pagrindinis tiek˜jas",M4Code,Normal,20,f5,false,VESClass);
  EditFieldTL(h,v+=vs,100,"Preki÷ °vairov˜",M4Code,Normal,20,f6,false,VARSClass);
  EditFieldTL(h,v+=vs,100,"Pardav˜jas",M4Code,Normal,10,f7,false,UserSClass);
  EditFieldTL(h,v+=vs,100,"Lojalumo kort.",M4Str,Normal,50,f11,false,LoyaltyCardSClass);
  EditFieldTL(h,v+=vs,100,"Narystes lygis",M4Code,Normal,20,f13,false,LCMemberLevelSClass);
  EditFieldTL(h,v+=vs,100,"Nuolaida (detaliai)",M4Val,Normal,0,vals0,false,0);
  EditFieldTL(h,v+=vs,100,"Vienetai",M4Code,Normal,5,f9,false,UnitSClass);
  EditFieldTL(h,v+=vs,100,"Nuolaida",M4Str,Normal,7,f14,false,0);// Edit ************************** BPI Ukraine - KramarAlexandr - Monday, 26 November 2018 13:21:18
  
  h = 300;
  v = 6;
  CheckBox(h,v+=vs,0,"Tik Patvirtintos",flags[1]);
  CheckBox(h,v+=vs,0,"¯skaitant pardavim÷ knygos duomenis",flags[2]);
  CheckBox(h,v+=vs,0,"¯traukti visas gautas prekes",flags[3]);
  CheckBox(h,v+=vs,0,"Ne°traukti uìdaryt÷",flags[4]);
  ButtonFrame(h=300,vt=(v+=(2*vs+7)),130,3,"Funkcija");
  RadioButton(h,v,2,0,"Perìiðra",ArtMode);
  RadioButton(h,v+=vm,0,0,"Perìiðra su °vairoves",ArtMode);
  RadioButton(h,v+=vm,1,0,"Detaliai",ArtMode);
  RadioButton(h,v+=vm,3,0,"Tiek˜j÷ apìvalga",ArtMode);
  EndFrame;
  ButtonFrame(h,v+=(2*vs+7),130,3,"Operacijos tipas");
  RadioButton(h,v,0,0,"Visi",Priority);
  RadioButton(h,v+=vm,1,0,"Tik pardavimai",Priority);
  RadioButton(h,v+=vm,2,0,"Tik grˆìinimai",Priority);
  EndFrame;
  ButtonFrame(h=470,v=vt,130,3,"Rðäiavimas");
  RadioButton(h,v,0,0,"Prek˜s kodas",Comparison);
  RadioButton(h,v+=vm,1,0,"Aukä‹iausi pardavimai",Comparison);
  RadioButton(h,v+=vm,2,0,"ëemiausi pardavimai",Comparison);
  RadioButton(h,v+=vm,3,0,"Didìiausia %",Comparison);
  RadioButton(h,v+=vm,4,0,"Maìiausia %",Comparison);
  EndFrame;
  
  ButtonFrame(h,v+=vm*2+10,130,3,"Esama prek˜s nuolaida");// Edit ************************** BPI Ukraine - KramarAlexandr - Tuesday, 20 November 2018 17:00:42
  RadioButton(h,v,0,0,"Default",flags[5]);
  RadioButton(h,v+=vm,1,0,"Didìiausia nuolaida",flags[5]);
  RadioButton(h,v+=vm,2,0,"Maìiausia nuolaida",flags[5]);
  EndFrame;
  EndWindow;

end;
//:VITO

//EVS: DOL-93
window DOLShopSalesRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("DOL - Parduotuv˜s pardavimai",DOLShopSalesRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  v = 6; h = 130; vs = 20; vm = 16;
  EditFieldTL(h,v+=vs,80,"Periodas iki",M4Date,Normal,0,d1,false,PasteCurDate);
  EditFieldTL(h,v+=vs,100,"Patalpa",M4Code,Normal,10,f1,false,LocationSClass);
  EditFieldTL(h,v+=vs,100,"Patalpos grup˜",M4Code,Normal,10,f2,false,LocGrSClass);
  EditFieldTL(h,v+=vs,100,"Vienetas",M4Code,Normal,10,f3,false,UnitSClass);
  CheckBox(h,v+=vs,0,"¯skaitant pardavim÷ knygos duomenis",flags[3]); // EVS: DOL-152
  ButtonFrame(h,v+=(2*vs+7),123,5,"Funkcija");
  RadioButton(h,v,0,0,"Pardavimai su PVM",flags[0]);
  RadioButton(h,v+=vm,1,0,"Pardavimai be PVM",flags[0]);
  RadioButton(h,v+=vm,2,0,"Kiekiai",flags[0]);
  RadioButton(h,v+=vm,3,0,"BP",flags[0]);
  RadioButton(h,v+=vm,4,0,"BP %",flags[0]);
  EndFrame;
  ButtonFrame(h,v+=(2*vs+7),123,3,"¯traukti");
  RadioButton(h,v,0,0,"Viskas",flags[1]);
  RadioButton(h,v+=vm,1,0,"Tik pardavimai",flags[1]);
  RadioButton(h,v+=vm,2,0,"Tik grˆìinimai",flags[1]);
  EndFrame;
  ButtonFrame(h,v+=(2*vs+7),123,5,"Periodo tipas");
  RadioButton(h,v,0,0,"Diena",flags[2]);
  RadioButton(h,v+=vm,1,0,"Savait˜",flags[2]);
  RadioButton(h,v+=vm,2,0,"M˜nuo",flags[2]);
  RadioButton(h,v+=vm,3,0,"Ketvirtis",flags[2]);
  RadioButton(h,v+=vm,4,0,"Metai",flags[2]);
  EndFrame;
  EndWindow;

end;
//:EVS

//VITO: DOL-89
window StandProblemVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  integer probcnt,i;
  array string 20 a_probcodes;
  array string 100 a_probnames;

  LoadStdProblemsToArray(a_probcodes,a_probnames,probcnt);

  WindowBegin("Pasirinkimas",StandProblemVClass,CGother,-);
  DynamicWindow;
  SetWRect(20,80,450,250 + (probcnt*50));
  UseView(RcVc);
  v = 20;  vs = 45;
  EditFieldTL(140,v,80,"Prieìastis",M4Code,Normal,20,f1,false,StandProblemsSClass);
  v = v + vs;
  for(i=0;i<probcnt;i=i+1)begin
    ColourPushButtonTag(100,v,-100,v+40,"DOLPOSPasteStandProblemWClassPasteProblem",a_probnames[i],7,a_probcodes[i]);
    v=v+50;
  end;

  ColourPushButton(100,v,200,v+40,"DOLDialogDoNothing","Atäaukti",1);
  ColourPushButton(-200,v,-100,v+40,"DOLDialogPOSStandProblemVClassOnOKWindow","T«sti",2);
  EndWindow;

end;
//:VITO

window EBS_ChangeINVarVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("Dydìio keitimas",EBS_ChangeINVarVClass,CGMnt,RcType);
  SetWRect(20,80,370,240);
  v = 30; h = 137; vs=22;
  EditFieldTL(h,v,120,"Paäalinti",M4Code,Normal,20,f1,false,INSClass);
  EditFieldTL(h,v+=vs,120,"Prid˜ti",M4Code,Normal,20,f2,false,INSClass);
  EditFieldTL(h,v+=vs,120,"Patalpa",M4Code,Normal,20,f3,false,LocationSClass);
  EndWindow;

end;

// EVS: DOL-90
window DOLRemoveDIINVClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("Iämesti klas« iä prek˜",DOLRemoveDIINVClass,CGMnt,RcType);
  SetWRect(20,80,500,215);
  vs = 20;h = 160; v = 6;
  EditFieldTL(h,v+=vs,150,"Prek˜s",M4UStr,Normal,41,f1,false,INSClass);
  EditFieldTL(h,v+=vs,80,"Grup˜",M4UStr,Normal,20,f2,false,ITSClass);
  EditFieldTL(h,v+=vs,80,"Klas˜",M4UStr,Normal,20,FirstAcc,false,DISClass);
  EndWindow;
end;
// :EVS

// EVS: DOL-120
window DOLItemBCEClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("DOL - Barkodai skeneriui",DOLItemBCEClass,CGEcW,RcType);
  SetWRect(20,80,350,160);
  EndWindow;
end;
// :EVS

// EVS: DOL-111
window DOLGenLCVClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("DOL - Lojalumo korteli÷ kðrimas",DOLGenLCVClass,CGMnt,RcType);
  SetWRect(20,80,500,215);
  vs = 20;h = 160; v = 6;
  EditFieldTL(h,v+=vs,80,"Kurti nuo",M4Str,Normal,41,f3,false,0);
  EditFieldTL(h,v+=vs,60,"Kiekis",M4Long,Normal,20,long2,false,0);
  EditFieldTL(h,v+=vs,80,"Pirk˜jas",M4Code,Normal,20,f1,false,AllCUSClass);
  EditFieldTL(h,v+=vs,80,"Naryst˜s lygis",M4Code,Normal,10,f2,false,LCMemberLevelSClass);
  EndWindow;
end;
// :EVS

// EVS: DOL-125
window DOLClearOffNoIVCashVClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("DOL - Clear Official Nr. from POS Inv",DOLClearOffNoIVCashVClass,CGMnt,RcType);
  SetWRect(20,80,500,215);
  StaticText(20,v=20,"Warning: this will clear ALL Official Numbers from POS Invoices",false);
  EndWindow;
end;
// :EVS

window DOLFindItemInWinWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("Prek˜s paieäka",DOLFindItemInWinWClass,CGOther,-);
  SetWRect(20,80,330,200);
  UseView(RcVc);
//  Modality(1);

  h = 100; v = 10;
  EditFieldTL(h,v,100,"Prek˜",M4Code,Normal,20,f1,false,INSClass);
  EndWindow;

end;

// EVS: DOL-122
window DOLPOItemsRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  WindowBegin("DOL - Preki÷ uìsakymo iä tiek˜j÷",DOLPOItemsRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  vs = 20; h = 130; v = 6;
  PeriodField(h,v,"Periodas");
  EditFieldTL(h,v+=vs,100,"Prek˜",M4Code,Normal,20,f1,false,INSClass);
  EditFieldTL(h,v+=vs,100,"Prek˜s grup˜",M4Code,Normal,5,f2,false,ITSClass);
  EditFieldTL(h,v+=vs,150,"Prek˜s klasifikacija",M4UStr,Normal,200,f3,false,DISClass);
  EditFieldTL(h,v+=vs,100,"Tiek˜jas",M4Code,Normal,20,f4,false,VESClass);
  EditFieldTL(h,v+=vs,100,"Vienetas",M4Code,Normal,10,f5,false,UnitSClass);
  EditFieldTL(h,v+=vs,80,"Dydis",M4Code,Normal,20,f6,false,VARSClass);

  ButtonFrame(h,v+=40,123,2,"¯traukti");
  CheckBox(h,v,0,"Uìdarytus",flags[1]);
  CheckBox(h,v+=16,0,"Nepatvirtintus",flags[2]);
  EndFrame;
  ButtonFrame(h,v+=40,123,3,"Bðkl˜");
  RadioButton(h,v,0,0,"Visi",flags[3]);
  RadioButton(h,v+=16,1,0,"Pristatyta",flags[3]);
  RadioButton(h,v+=16,2,0,"Nepristatyta",flags[3]);
  EndFrame;
  EndWindow;
end;
// :EVS


window DOLRenewOffNrIVCashVClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  WindowBegin("DOL - Fill POS Inv. Missing Official Nr. from Support Reg.",DOLRenewOffNrIVCashVClass,CGMnt,RcType);
  SetWRect(20,80,500,215);
  StaticText(20,v=20,"This will renew Official numbers only for POS invoices which have none",false);
  EndWindow;
end;

window DOLSetTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;
  v = 6; vs = 20; h = 150;

  WindowBegin("Dolita - Sistema Parametrai",DOLSetTClass,CGSbl,ItemSettingType);
  SetWRect(20,80,480,320);
  SetBlid(DOLSetBlock);
  Tile(0,20,false,"",SeasonCType);
  TileButton(1,"Prek˜s");
  Tile(1,120,true,"",SeasonCType);
  EditField(h,v = 10,80,"Sezonas klasifikacijos tipas",Normal,SeasonCType,false,CTypeSClass);
  EditField(h,v += vs,80,"Tipas klasifikacijos tipas",Normal,TypeCType,false,CTypeSClass);
  EndWindow;
end;

window DOLCUClassSClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  string 255 label;
  WindowBegin("Klasi÷ °vedimas",DOLCUClassSClass,CGother,RcType);
  ToolBar;
  PushButton(-70,5,-10,22,ToolOK,"OK");
  HalPushButton(-140,5,-80,22,"CUClassReplace","Pakeisti");
  EndToolBar;
  DynamicWindow;
  UseView(RcVc);
  SetWRect(164,80,524,344);
  h = 130; vs=20;
  StaticText(h-8,v=16,"Kategorija",true);
  label = UserDefined("CUClassSClass","0");
  StaticText(h+60,v,label,true);
  StaticText(h-8,v+=20,"Reikiamos",true);
//  StaticText(12,v+=20,"Required Types",false);
  StaticText(h,v,"Klas˜s",false);
  label = UserDefined("CUClassSClass","1");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,f1,false,CClassBTSClass);
  end;
  label = UserDefined("CUClassSClass","2");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,f2,false,CClassBTSClass);
  end;
  label = UserDefined("CUClassSClass","3");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,f3,false,CClassBTSClass);
  end;
  label = UserDefined("CUClassSClass","4");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,f4,false,CClassBTSClass);
  end;
  label = UserDefined("CUClassSClass","5");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,f5,false,CClassBTSClass);
  end;
  label = UserDefined("CUClassSClass","6");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,ObjStr,false,CClassBTSClass);
  end;
  label = UserDefined("CUClassSClass","7");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,Stext,false,CClassBTSClass);
  end;
  label = UserDefined("CUClassSClass","8");
  if (nonblank(label)) then begin
    EditField(h,v+=vs,-20,label,Normal,LastAcc,false,CClassBTSClass);
  end;
  EditField(h,v+=30,-20,"Papildomos",Normal,f6,false,CClassSClass);
  EndWindow;
end;

window EBS_AddDiscountWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Paskirstyti nuolaidˆ",EBS_AddDiscountWClass,CGother,-);
  Modality(kModalityGlobal);
  UseView(RcVc);
  SetWRect(20,80,400,200);
  Sizeable(-1,-1,0,0);
  EditFieldTL(h=150,v=10, 60,"Visa nuolaida",M4Val,Normal,0,vals0,true,0);
  EditFieldTL(h,v+=20, 60,"Procentin˜ nuolaida",M4Val,Normal,0,vals1,true,0);
  HalPushButton(h,v+=25,h+140,v+20,"EBS_AddDiscountBtn","Prid˜ti");
  EndWindow;

  return;
end;

window DOLFixGPRetIVCashVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("DOL - Fix GP in POS Invoices (Inv No. Returns)",DOLFixGPRetIVCashVClass,CGMnt,RcType);
  SetWRect(20,80,370,240);
  v = 30; h = 137; vs=20;
  PeriodField(h,v,"Period");
  EndWindow;

end;



window EBS_AddUserFieldLClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("Additional user fields",EBS_AddUserFieldLClass,CGmlist,-);
    SpawnClass(EBS_AddUserFieldDClass);
    SetWRect(20,80,390,298);
    Sizeable(-1,-1,0,0);
    UseView(EBS_AddUserFieldVc);
    RecordList(4,17,-21,-39);
    RlColKey(4,4,"Paraäas",Code,false,Code);
    RlCol(90,90,"Maks. nuolaida",MaxvRebate,false);
    SearchField("Ieäkoti");
  EndWindow;

  return;
end;

window EBS_AddUserFieldDClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("Additional user fields",EBS_AddUserFieldDClass,CGview,-);
    SetWRect(64,80,580,200);
    UseView(EBS_AddUserFieldVc);
    h=100;
    vs = 20;
    EditField(h,v=12,100,"Paraäas",Normal,Code,false,UserSClass);
    EditField(h,v+=vs,100,"Maks. nuolaida",Normal,MaxvRebate,true,0);
    CheckBox(h,v+=vs,0,"Siðlyti prek«",ShowCrossSalesFlag); // EVS: DOL-2
  EndWindow;

  return;
end;

window EBS_StockRecalcVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real v,vs,h,vm;

  WindowBegin("Stock recalc (EBS)",EBS_StockRecalcVClass,CGMnt,RcType);
    SetWRect(20,80,350,240);
    v= 6; vs = 20; h=100;
    // EditField(h,v,100,"Date",Normal,d1,false,PasteCurDate);
    ButtonFrame(h,vm=(v+=45),100,2,"Action");
    RadioButton(h,v,0,0,"Unok",ArtMode);
    RadioButton(h,v+=16,1,0,"Ok",ArtMode);
  EndWindow;

  return;
end;

window DOLSzConvTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;

  WindowBegin("Dolita - Inch to CM conversion (Shopify)",DOLSzConvTClass,CGHbl,HBlRecType);
  SetWRect(20,80,532,357);
  Sizeable(-1,-1,0,0);
  SetBlid(DOLSzConvBlock);
  MatrixBegin(h=8,v=20,-31,-20,-,99);
  MatCol(1,24,"Inch",0,Inch,true,0);
  MatCol(1,84,"CM",0,CM,true,0);
  EndMatrix;
  EndWindow;

  return;
end;
// :EVS

window EBS_NewCUFieldsTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("DOL - Laukai naujo kliento sukðrimui",EBS_NewCUFieldsTClass,CGHbl,HBlRecType);
  SetBlid(EBS_NewCUFieldsBlock);
  SetWRect(20,80,520,300);
  h = 8; v = 20;
  MatrixBegin(h,v,-25,-1,-,99);
  MatCol(1,24,"Lauko tipas",0,FieldType,false,SetSClass);
  MatCol(1,144,"Tipas",0,EditState,false,SetSClass);
  MatCol(1,224,"Kortel˜",0,Label,false,0);
  MatCol(1,324,"Default value",0,DefValue,false,0);
  EndMatrix;
  EndWindow;
end;

window EBS_ScanLoyCardWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Skenuoti anketos barkodˆ",EBS_ScanLoyCardWClass,CGother,-);
  Modality(kModalityGlobal);
  UseView(RcVc);
  SetWRect(20,80,650,200);
  EditFieldTLX(h=360,v=20,-20,"Skenuoti anketos barkodˆ",M4Str,Normal,100,25,patM4black,f2,false,0);
  ColourPushButton(40,v+=40,240,v+40,"EBS_ScanLoyCardCancelBtn","Nutraukti",20);
  ColourPushButton(270,v,470,v+40,"EBS_ScanLoyCardOkBtn","Gerai",20);
  EndWindow;

  return;
end;

window EBS_TempWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;

  WindowBegin("Temp",EBS_TempWClass,CGother,-);
  UseView(RcVc);
  SetWRect(20,80,20,90);
  EndWindow;

  return;
end;


window BPI_BarForRebBlockTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("DOL - Coupon discounts",BPI_BarForRebBlockTClass,CGHbl,HBlRecType);
  SetBlid(BPI_BarForRebBlock);
  SetWRect(20,80,240,300);
  h = 8; v = 20;
  MatrixBegin(h,v,-25,-1,-,100);
  MatCol(1,24,"Barcode",0,BarCode,false,0);
  MatCol(1,144,"Discount",0,Discount,false,0);
  EndMatrix;
  EndWindow;
end;

window LabelPrintRulesTClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v;
  WindowBegin("DOL - Label printing rules",LabelPrintRulesTClass,CGSbl,ItemSettingType);
  SetBlid(LabelPrintRulesBlock);
  SetWRect(20,80,340,400);
  h = 208; v = 20;
  EditField(h,v+=20,50,"Language for items without discount",Normal,LangCodeWD,false,LangSClass);
  EditField(h,v+=20,50,"Language for items with discount",Normal,LangCodeND,false,LangSClass);
  EditField(h,v+=20,50,"Amount of labels printed",Normal,Amount,false,0);
  EndWindow;
end;

window RebateCouponScanWClass:2
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real f,h,v,vs;
  WindowBegin("DOL - Coupon discounts",RebateCouponScanWClass,CGother,RcType);
	Modality(1);
  UseView(RcVc);
  CloseOnCancel;
  SetWRect(20,80,500,200);
  h = 120; v = 20; vs = 30; f = 100;
  EditFieldTL(h,v,-40,"Coupon discounts",M4Str,Normal,100,f1,false,0);
  ColourPushButton(40,v+=40,240,v+40,"EBS_ScanLoyCardCancelBtn","Nutraukti",20);
  ColourPushButton(270,v,470,v+40,"RebateCouponScanWClassProceed","Gerai",20);
  EndWindow;
end;


window EBS_ClosedLoyaltyCardsVClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("Close Loyalty Cards",EBS_ClosedLoyaltyCardsVClass,CGMnt,RcType);
  SetWRect(20,80,370,240);
  v = 30; h = 137; vs=22;
  EditFieldTL(h,v,120,"Close till",M4Date,Normal,0,d1,false,PasteCurDate);
  EndWindow;

end;

window POSReturnTextWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs;
  
  WindowBegin("POS Return Text",POSReturnTextWClass,CGOther,-);
  UseView(CUVc);
  SetWRect(20,80,450,300);
  AutoSizeWindow(false);
  ToolBar;
  HalPushButton(-140,5,-80,22,"POSReturnTextWClassSave","Save");
  EndToolBar;
  h = 150;
  TextField(20,v=6,-20,-20,Math2,0);
  EndWindow;
	
	return;
end;

window POSClockInOutLClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  WindowBegin("POS Clock In-Outs",POSClockInOutLClass,CGmlist,-);
  SetWRect(20,80,660,298);
  Sizeable(-1,-1,0,0);
  SpawnClass(POSClockInOutDClass);
  UseView(POSClockInOutVc);
  RecordList(4,17,-21,-39);
  RlColKey(4,4,"UUID",UUID,false,MainKey);
  RlColKey(90,90,"Type",Type,false,TypeTime);
  RlCol(200,200,"Date",TransDate,false);
  SearchField("Search");
  EndWindow;
end;

window POSClockInOutDClass:1
  wtag("language","ENG"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vs,v2,vs2,hm;
  WindowBegin("POS Clock In-Out",POSClockInOutDClass,CGview,-);
  SetWRect(20,80,600,339);
  Sizeable(-1,-1,0,0);
  UseView(POSClockInOutVc);
  v = -14; h = 150;
  EditField(h,v+=20,-40,"UUID",Normal,UUID,false,UUID);
  EditField(h,v+=20,-40,"Date",Normal,TransDate,false,PasteCurDate);
  EditField(h,v+=20,-40,"Time",Normal,TransTime,false,PasteCurTime);
  EditField(h,v+=20,-40,"Type",Normal,Type,false,SetSClass);
  EditField(h,v+=20,-40,"Local Machine",Normal,LocalMachine,false,0);
  EditField(h,v+=20,-40,"User",Normal,UserCode,false,UserSClass);

  vs=20; h=120; vs2=16; hm=-100;
  EndWindow;
end;

window EBS_ClockInWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,v,v2,v3,vs,l;
  integer wn;
  longint bm,lt,rt,tp;
  record RcVc RepSpec;

  WindowBegin("Clock In",EBS_ClockInWClass,CGOther,RcType);
    Modality(kModalityGlobal);
    DynamicWindow;
    wn = CurWindow;
    GetScreenSize(wn,tp,lt,bm,rt);
    switch (GuiType) begin
      case kGuiCocoa:
        bm = bm - 80;
      case kGuiWindowsDesktop:
        tp = tp + 30;
        bm = bm - 40;
        rt = rt - 55;
        lt = lt - 45;
      case kGuiGDI:
        tp = tp + 30;
        bm = bm - 40;
        rt = rt - 55;
        lt = lt - 45;
      case kGuiWPF:
        tp = tp + 30;
        bm = bm - 40;
        rt = rt - 55;
        lt = lt - 45;
    end;

  SetWRect(lt,tp,rt,bm); // SetWRect(64,80,409,210);
  FullscreenWindow;
  Sizeable(-1,-1,0,0);
  UseView(RcVc);

  hm = 280; v = 60;
  vs = 52; h2 = 55; v3 = 48; l = 57;
  h = hm;
  EditFieldTLX(h+l+30,20,120,"Grˆìa",M4Val,ViewOnly,100,25,patM4black,vals0,true,0);
  EditFieldTL(h+l+30,v,120,"Pardav˜jˆs",M4UStr,Normal,10,f1,false,0);
  EditFieldTL(h+l+30,v+=20,120,"Slaptaìodis",M4Star,Normal,20,f2,false,0);
  v=v+29;
  h = hm; ColourPushButton(h,v,h+h2*3,v+v3,"SalesAssistantVClassUserListBtn","Pard. sˆraäas",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad1","1_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad2","2_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad3","3_",2);
  h = h + h2 + 10; ColourPushButton(h,v,h+h2,v+v3*3+8,"EBS_ClockInWClassOKBtn","OK",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad4","4_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad5","5_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad6","6_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad7","7_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad8","8_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad9","9_",2);
  v = v+vs;
  h = hm-2+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad0","0_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyDel","Del",2);

  // ColourPushButton(300,40,400,88,"TEST","TEST",2);
  DrawClockInUserButtons(50,40,vs,v3,10);

  EndWindow;

  return;
end;


window EBS_ClockOutWClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,h2,hm,v,v2,v3,vs,l;
  integer wn;
  longint bm,lt,rt,tp;
  record RcVc RepSpec;

  WindowBegin("Clock In",EBS_ClockOutWClass,CGOther,RcType);
    Modality(kModalityGlobal);
    DynamicWindow;
    wn = CurWindow;
    GetScreenSize(wn,tp,lt,bm,rt);
    switch (GuiType) begin
      case kGuiCocoa:
        bm = bm - 80;
      case kGuiWindowsDesktop:
        tp = tp + 30;
        bm = bm - 40;
        rt = rt - 55;
        lt = lt - 45;
      case kGuiGDI:
        tp = tp + 30;
        bm = bm - 40;
        rt = rt - 55;
        lt = lt - 45;
      case kGuiWPF:
        tp = tp + 30;
        bm = bm - 40;
        rt = rt - 55;
        lt = lt - 45;
    end;

  SetWRect(lt,tp,rt,bm); // SetWRect(64,80,409,210);
  FullscreenWindow;
  Sizeable(-1,-1,0,0);
  UseView(RcVc);

  hm = 280; v = 60;
  vs = 52; h2 = 55; v3 = 48; l = 57;
  h = hm;
  EditFieldTLX(h+l+30,20,120,"Grˆìa",M4Val,ViewOnly,100,25,patM4black,vals0,true,0);
  EditFieldTL(h+l+30,v,120,"Pardav˜jˆs",M4UStr,Normal,10,f1,false,0);
  EditFieldTL(h+l+30,v+=20,120,"Slaptaìodis",M4Star,Normal,20,f2,false,0);
  v=v+29;
  h = hm; ColourPushButton(h,v,h+h2*3,v+v3,"SalesAssistantVClassUserListBtn","Pard. sˆraäas",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad1","1_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad2","2_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad3","3_",2);
  h = h + h2 + 10; ColourPushButton(h,v,h+h2,v+v3*3+8,"EBS_ClockOutWClassOKBtn","OK",2);//EBS_ChooseSalesManVClassOKBtn
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad4","4_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad5","5_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad6","6_",2);
  v = v+vs;
  h = hm-2; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad7","7_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad8","8_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad9","9_",2);
  v = v+vs;
  h = hm-2+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyPad0","0_",2);
  h = h+l; ColourPushButton(h,v,h+h2,v+v3,"NPTSPaymentToolKeyDel","Del",2);

  // ColourPushButton(300,40,400,88,"TEST","TEST",2);
  DrawClockOutUserButtons(50,40,vs,v3,10);

  EndWindow;

  return;
end;

window DOL_EmpTimeRClass:1
  wtag("language","LIT"), wtag("product","*"), wtag("productcode","*"), wtag("device","computer")
begin
  real h,v,vm,vs;

  WindowBegin("DOL - Employee Time",DOL_EmpTimeRClass,CGRcW,RcType);
  SetWRect(20,80,400,220);
  v = 6; h = 130; vs = 20; vm = 16;
  PeriodField(h=155,v=6,"Period");
  EditFieldTL(h,v+=vs,100,"Salesman",M4Code,Normal,10,f1,false,UserSClass);
  EditFieldTL(h,v+=vs,100,"Location",M4Code,Normal,10,f2,false,LocalMachineSClass);
  EndWindow;

end;